version: "3.8"

services:
  postgres:
    image: postgres:15.2-alpine3.17
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres

  pgweb:
    image: sosedoff/pgweb
    restart: on-failure
    ports:
      - "8081:8081"
    environment:
      - PGWEB_DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable
    depends_on:
      - postgres

  # https://codersee.com/how-to-set-up-kafka-without-zookeeper-using-docker-compose/
  kafka:
    image: confluentinc/cp-kafka:7.2.5
    ports:
      - "29096:29096"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29096
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_BROKER_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093,PLAINTEXT_HOST://0.0.0.0:29096
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_NODE_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
    volumes:
      - ./kafka.sh:/tmp/kafka.sh
    command: "bash -c '/tmp/kafka.sh && /etc/confluent/docker/run'"

  kafka-ui:
    image: docker.redpanda.com/redpandadata/console:latest
    ports:
      - "9093:8080"
    environment:
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - kafka
